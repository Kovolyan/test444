// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$ddarw-name: 'ddarw'
$ddarw-x: 0px
$ddarw-y: 55px
$ddarw-offset-x: 0px
$ddarw-offset-y: -55px
$ddarw-width: 21px
$ddarw-height: 19px
$ddarw-total-width: 195px
$ddarw-total-height: 74px
$ddarw-image: '../images/sprites.png'
$ddarw: (0px, 55px, 0px, -55px, 21px, 19px, 195px, 74px, '../images/sprites.png', 'ddarw', )
$facebook-name: 'facebook'
$facebook-x: 0px
$facebook-y: 0px
$facebook-offset-x: 0px
$facebook-offset-y: 0px
$facebook-width: 195px
$facebook-height: 33px
$facebook-total-width: 195px
$facebook-total-height: 74px
$facebook-image: '../images/sprites.png'
$facebook: (0px, 0px, 0px, 0px, 195px, 33px, 195px, 74px, '../images/sprites.png', 'facebook', )
$futer-name: 'futer'
$futer-x: 0px
$futer-y: 35px
$futer-offset-x: 0px
$futer-offset-y: -35px
$futer-width: 34px
$futer-height: 18px
$futer-total-width: 195px
$futer-total-height: 74px
$futer-image: '../images/sprites.png'
$futer: (0px, 35px, 0px, -35px, 34px, 18px, 195px, 74px, '../images/sprites.png', 'futer', )
$spritesheet-width: 195px
$spritesheet-height: 74px
$spritesheet-image: '../images/sprites.png'
$spritesheet-sprites: ($ddarw, $facebook, $futer, )
$spritesheet: (195px, 74px, '../images/sprites.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
